<h3 class="mb-4">Admin Control Panel</h3>

<style>
    /* Override container size to make dashboard bigger */
    .card-body {
        padding: 1.5rem !important;
    }
    
    .table-responsive {
        width: 100% !important;
        overflow-x: auto !important;
    }
    
    .table {
        width: 100% !important;
        min-width: 1000px !important;
    }
    
    /* Ensure proper cell spacing */
    .table td, .table th {
        padding: 0.75rem !important;
        vertical-align: middle !important;
    }
    
    /* Constrain admin panel container on desktop to avoid edge overflow */
    @media (min-width: 992px) {
        .dashboard-main-card {
            width: 100% !important;
            margin: -2rem auto 2rem !important;
        }
    }
</style>

<div class="card mb-4 shadow-sm">
    <div class="card-header bg-danger text-white d-flex justify-content-between align-items-center">
        <h4 class="mb-0"><i class="fas fa-shield-alt me-2"></i>Admin Dashboard</h4>
        <span class="badge bg-light text-dark">Admin: <%= locals.user.name %></span>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-3 mb-3">
                <div class="card bg-primary text-white h-100">
                    <div class="card-body py-3">
                        <h6 class="mb-0"><i class="fas fa-users me-2"></i>Total Users</h6>
                        <h2 class="mt-2 mb-0"><%= users.length %></h2>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="card bg-warning text-dark h-100">
                    <div class="card-body py-3">
                        <h6 class="mb-0"><i class="fas fa-clock me-2"></i>Pending Requests</h6>
                        <h2 class="mt-2 mb-0"><%= users.filter(u => u.investmentAccess === 'pending').length %></h2>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="card bg-success text-white h-100">
                    <div class="card-body py-3">
                        <h6 class="mb-0"><i class="fas fa-check-circle me-2"></i>Active Investors</h6>
                        <h2 class="mt-2 mb-0"><%= users.filter(u => u.investmentAccess === 'access').length %></h2>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="card bg-info text-white h-100">
                    <div class="card-body py-3">
                        <h6 class="mb-0"><i class="fas fa-wallet me-2"></i>Total Balance</h6>
                        <h2 class="mt-2 mb-0">$<%= users.reduce((sum, user) => sum + (user.balance || 0), 0).toFixed(2) %></h2>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Users Grid -->
<div class="card mb-4 shadow-sm">
    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
        <h5 class="mb-0"><i class="fas fa-users me-2"></i> Users Management</h5>
        <div>
            <a href="/admin/withdrawal-requests" class="btn btn-sm btn-warning">
                <i class="fas fa-money-bill-wave me-1"></i> View All Withdrawal Requests
            </a>
        </div>
    </div>
    <div class="card-body">
        <!-- Search and Filter Controls -->
        <div class="row mb-3">
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                    <input type="text" id="userSearch" class="form-control" placeholder="Search by name, email or user code..." onkeyup="filterUsers()">
                </div>
            </div>
            <div class="col-md-3">
                <select id="statusFilter" class="form-select" onchange="filterUsers()">
                    <option value="all">All Statuses</option>
                    <option value="pending">Pending Requests</option>
                    <option value="access">Access Granted</option>
                    <option value="rejected">Access Rejected</option>
                    <option value="none">No Access</option>
                </select>
            </div>
            <div class="col-md-3">
                <select id="roleFilter" class="form-select" onchange="filterUsers()">
                    <option value="all">All Roles</option>
                    <option value="user">Users</option>
                    <option value="admin">Admins</option>
                </select>
            </div>
        </div>
        
        <div class="table-responsive">
            <div class="alert alert-info d-none" id="noResultsMessage">
                <i class="fas fa-info-circle me-2"></i> No users match your search criteria.
            </div>
            <table class="table table-striped table-hover mb-0" id="usersTable">
                <thead class="table-dark">
                    <tr>
                        <th scope="col" class="text-center" style="width: 40px;">#</th>
                        <th scope="col" style="width: 200px;">User</th>
                        <th scope="col" class="text-center" style="width: 80px;">Role</th>
                        <th scope="col" class="text-center" style="width: 80px;">Invites</th>
                        <th scope="col" class="text-center" style="width: 120px;">Balance</th>
                        <th scope="col" class="text-center" style="width: 120px;">Pending</th>
                        <th scope="col" class="text-center" style="width: 150px;">Investment</th>
                        <th scope="col" style="width: 200px;">Wallets</th>
                        <th scope="col" class="text-center" style="width: 100px;">Actions</th>
                    </tr>
                </thead>
                <tbody id="usersTableBody">
                    <% if (users && users.length > 0) { %>
                        <% 
                        // Sort users: pending first, then access, then rejected, then none
                        const sortedUsers = [...users].sort((a, b) => {
                            const order = { 'pending': 0, 'access': 1, 'rejected': 2, undefined: 3 };
                            return (order[a.investmentAccess] || 3) - (order[b.investmentAccess] || 3);
                        });
                        
                        // Initialize users for JavaScript pagination
                        // Pagination is handled by client-side JavaScript
                        %>
                        <% sortedUsers.forEach((user, index) => { %>
                            <tr class="user-row <%= user.investmentAccess === 'pending' ? 'table-warning' : '' %>" data-name="<%= user.name.toLowerCase() %>" data-email="<%= user.email.toLowerCase() %>" data-code="<%= (user.userCode || '').toLowerCase() %>" data-role="<%= user.role %>" data-status="<%= user.investmentAccess || 'none' %>">
                                <th scope="row" class="text-center"><%= index + 1 %></th>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="me-2">
                                            <span class="avatar-circle bg-<%= user.role === 'admin' ? 'danger' : 'primary' %> text-white">
                                                <%= user.name.charAt(0).toUpperCase() %>
                                            </span>
                                        </div>
                                        <div>
                                            <div><%= user.name %></div>
                                            <small class="text-muted"><%= user.email %></small>
                                            <small class="text-muted d-block">Code: <code><%= user.userCode || 'N/A' %></code></small>
                                        </div>
                                    </div>
                                </td>
                                <td class="text-center">
                                    <span class="badge <%= user.role === 'admin' ? 'bg-danger' : 'bg-success' %>">
                                        <%= user.role === 'admin' ? 'Admin' : 'User' %>
                                    </span>
                                </td>
                                <td class="text-center"><span class="badge bg-secondary"><%= user.userInvites || 0 %></span></td>
                                <td class="text-center">
                                    <div class="d-flex align-items-center justify-content-center">
                                        <span class="badge bg-<%= (user.balance && user.balance > 0) ? 'success' : 'secondary' %> p-2">
                                            $<%= user.balance ? user.balance.toFixed(2) : '0.00' %>
                                        </span>
                                        <a href="/admin/edit-balance/<%= user._id %>" class="btn btn-sm btn-outline-primary ms-2" title="Edit Balance">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                    </div>
                                </td>
                                <td class="text-center">
                                    <% 
                                    let pendingWithdrawals = 0;
                                    if (user.withdrawalRequests && user.withdrawalRequests.length > 0) {
                                        user.withdrawalRequests.forEach(req => {
                                            if (req.status === 'pending') {
                                                pendingWithdrawals += req.amount;
                                            }
                                        });
                                    }
                                    %>
                                    <% if (pendingWithdrawals > 0) { %>
                                        <div class="d-flex align-items-center justify-content-center">
                                            <span class="badge bg-warning text-dark p-2">
                                                $<%= pendingWithdrawals.toFixed(2) %>
                                            </span>
                                            <a href="/admin/withdrawal-requests/<%= user._id %>" class="btn btn-sm btn-outline-warning ms-2" title="View Withdrawal Requests">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                        </div>
                                    <% } else { %>
                                        <span class="badge bg-secondary p-2">$0.00</span>
                                    <% } %>
                                </td>
                                <td class="text-center">
                                    <% if (user.investmentAccess === 'access') { %>
                                        <span class="badge bg-success p-2">Access Granted</span>
                                    <% } else if (user.investmentAccess === 'pending') { %>
                                        <div class="d-flex align-items-center justify-content-center">
                                            <span class="badge bg-warning text-dark p-2 me-2">Pending</span>
                                            <div class="btn-group btn-group-sm">
                                                <form action="/admin/grant-investment-access" method="post" class="d-inline">
                                                    <input type="hidden" name="userId" value="<%= user._id %>">
                                                    <button type="submit" class="btn btn-sm btn-success" title="Grant Access">
                                                        <i class="fas fa-check"></i>
                                                    </button>
                                                </form>
                                                <form action="/admin/reject-investment-access" method="post" class="d-inline">
                                                    <input type="hidden" name="userId" value="<%= user._id %>">
                                                    <button type="submit" class="btn btn-sm btn-danger" title="Reject Access" onclick="return confirm('Are you sure you want to reject this investment access request?')">
                                                        <i class="fas fa-times"></i>
                                                    </button>
                                                </form>
                                            </div>
                                        </div>
                                    <% } else if (user.investmentAccess === 'rejected') { %>
                                        <span class="badge bg-danger p-2">Rejected</span>
                                    <% } else { %>
                                        <span class="badge bg-secondary p-2">No Access</span>
                                    <% } %>
                                </td>
                                <td>
                                    <div class="wallet-info">
                                        <div class="d-flex justify-content-between align-items-center mb-1">
                                            <span class="badge bg-success text-white">Deposit</span>
                                            <div class="d-flex align-items-center">
                                                <% if (user.depositWallet) { %>
                                                    <small class="text-truncate" style="max-width: 100px;" title="<%= user.depositWallet %>">
                                                        <code><%= user.depositWallet.substring(0, 8) %>...</code>
                                                    </small>
                                                <% } else { %>
                                                    <small class="text-muted">Not set</small>
                                                <% } %>
                                                <a href="/admin/wallet-form/<%= user._id %>" class="btn btn-sm btn-outline-success ms-1 py-0 px-1" title="<%= user.depositWallet ? 'Edit Deposit Wallet' : 'Set Deposit Wallet' %>">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                            </div>
                                        </div>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span class="badge bg-info text-white">Withdraw</span>
                                            <div class="d-flex align-items-center">
                                                <% if (user.withdrawWallet) { %>
                                                    <small class="text-truncate" style="max-width: 100px;" title="<%= user.withdrawWallet %>">
                                                        <code><%= user.withdrawWallet.substring(0, 8) %>...</code>
                                                    </small>
                                                <% } else { %>
                                                    <small class="text-muted">Not set</small>
                                                <% } %>
                                                <a href="/admin/withdraw-wallet-form/<%= user._id %>" class="btn btn-sm btn-outline-info ms-1 py-0 px-1" title="<%= user.withdrawWallet ? 'Edit Withdrawal Wallet' : 'Set Withdrawal Wallet' %>">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="text-center">
                                    <div class="btn-group btn-group-sm">
                                        <a href="/admin/edit-balance/<%= user._id %>" class="btn btn-primary" title="Edit Balance">
                                            <i class="fas fa-dollar-sign"></i>
                                        </a>
                                        <a href="/admin/update-password/<%= user._id %>" class="btn btn-danger" title="Update Password">
                                            <i class="fas fa-key"></i>
                                        </a>
                                        <% if (user.role !== 'admin') { %>
                                        <form action="/admin/change-role" method="post" class="d-inline">
                                            <input type="hidden" name="userId" value="<%= user._id %>">
                                            <input type="hidden" name="newRole" value="admin">
                                            <button type="submit" class="btn btn-warning" title="Make Admin" onclick="return confirm('Are you sure you want to make <%= user.name %> an admin? This will give them full administrative privileges.')">
                                                <i class="fas fa-user-shield"></i>
                                            </button>
                                        </form>
                                        <% } else { %>
                                        <form action="/admin/change-role" method="post" class="d-inline">
                                            <input type="hidden" name="userId" value="<%= user._id %>">
                                            <input type="hidden" name="newRole" value="user">
                                            <button type="submit" class="btn btn-secondary" title="Make Regular User" onclick="return confirm('Are you sure you want to change <%= user.name %> to a regular user? This will remove their administrative privileges.')">
                                                <i class="fas fa-user"></i>
                                            </button>
                                        </form>
                                        <% } %>
                                    </div>
                                </td>
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="10" class="text-center py-3">No users found</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
            
            <!-- Pagination Controls -->
            <div class="d-flex justify-content-center mt-3" id="paginationContainer">
                <nav aria-label="Users pagination">
                    <ul class="pagination" id="usersPagination">
                        <li class="page-item disabled" id="prevPage">
                            <a class="page-link" href="#" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        <!-- Page numbers will be inserted here by JavaScript -->
                        <li class="page-item disabled" id="nextPage">
                            <a class="page-link" href="#" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<!-- CSS for avatar circle -->
<style>
    .avatar-circle {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 36px;
        height: 36px;
        border-radius: 50%;
        font-weight: bold;
    }
    
    .wallet-info {
        font-size: 0.9rem;
    }
    
    /* Highlight pending rows */
    .table-warning td {
        background-color: rgba(255, 243, 205, 0.4) !important;
    }
</style>

<!-- JavaScript for search and filtering -->
<script>
    // Override container width to make dashboard bigger
    document.addEventListener('DOMContentLoaded', function() {
        // Find the parent container and make it wider
        const container = document.querySelector('.container');
        if (container) {
            container.style.maxWidth = '100%';
        }
        
        // Find the column and make it full width
        const column = document.querySelector('.col-12');
        if (column) {
            column.className = 'col-12';
        }
    });
    
    // Pagination variables
    const itemsPerPage = 15;
    let currentPage = 1;
    let filteredRows = [];
    
    function filterUsers() {
        const searchTerm = document.getElementById('userSearch').value.toLowerCase();
        const statusFilter = document.getElementById('statusFilter').value;
        const roleFilter = document.getElementById('roleFilter').value;
        const rows = document.querySelectorAll('.user-row');
        let visibleCount = 0;
        
        // Reset filtered rows
        filteredRows = [];
        
        rows.forEach(row => {
            const name = row.getAttribute('data-name');
            const email = row.getAttribute('data-email');
            const code = row.getAttribute('data-code');
            const role = row.getAttribute('data-role');
            const status = row.getAttribute('data-status');
            
            // Check if row matches all filters
            const matchesSearch = name.includes(searchTerm) || 
                                 email.includes(searchTerm) || 
                                 code.includes(searchTerm);
                                 
            const matchesStatus = statusFilter === 'all' || status === statusFilter;
            const matchesRole = roleFilter === 'all' || role === roleFilter;
            
            // Add to filtered rows if it matches all filters
            if (matchesSearch && matchesStatus && matchesRole) {
                filteredRows.push(row);
                visibleCount++;
            }
        });
        
        // Show/hide no results message
        const noResultsMessage = document.getElementById('noResultsMessage');
        if (visibleCount === 0) {
            noResultsMessage.classList.remove('d-none');
            // Hide pagination if no results
            document.getElementById('paginationContainer').classList.add('d-none');
        } else {
            noResultsMessage.classList.add('d-none');
            // Show pagination if there are results
            document.getElementById('paginationContainer').classList.remove('d-none');
            // Update pagination
            updatePagination();
        }
        
        // Reset to first page when filters change
        goToPage(1);
    }
    
    function updatePagination() {
        const totalPages = Math.ceil(filteredRows.length / itemsPerPage);
        const paginationElement = document.getElementById('usersPagination');
        
        // Clear existing page numbers
        const pageItems = paginationElement.querySelectorAll('.page-item:not(#prevPage):not(#nextPage)');
        pageItems.forEach(item => item.remove());
        
        // Add new page numbers
        const nextPageItem = document.getElementById('nextPage');
        for (let i = 1; i <= totalPages; i++) {
            const li = document.createElement('li');
            li.className = `page-item ${i === currentPage ? 'active' : ''}`;
            li.setAttribute('data-page', i);
            
            const a = document.createElement('a');
            a.className = 'page-link';
            a.href = '#';
            a.textContent = i;
            
            a.addEventListener('click', function(e) {
                e.preventDefault();
                goToPage(i);
            });
            
            li.appendChild(a);
            paginationElement.insertBefore(li, nextPageItem);
        }
        
        // Update prev/next buttons
        document.getElementById('prevPage').classList.toggle('disabled', currentPage === 1);
        document.getElementById('nextPage').classList.toggle('disabled', currentPage === totalPages || totalPages === 0);
    }
    
    function goToPage(page) {
        currentPage = page;
        
        // Hide all rows first
        document.querySelectorAll('.user-row').forEach(row => {
            row.style.display = 'none';
        });
        
        // Show only rows for current page
        const startIndex = (page - 1) * itemsPerPage;
        const endIndex = Math.min(startIndex + itemsPerPage, filteredRows.length);
        
        for (let i = startIndex; i < endIndex; i++) {
            filteredRows[i].style.display = '';
        }
        
        // Update active page in pagination
        document.querySelectorAll('#usersPagination .page-item').forEach(item => {
            if (item.getAttribute('data-page') == page) {
                item.classList.add('active');
            } else if (item.getAttribute('data-page')) {
                item.classList.remove('active');
            }
        });
        
        // Update prev/next buttons
        const totalPages = Math.ceil(filteredRows.length / itemsPerPage);
        document.getElementById('prevPage').classList.toggle('disabled', page === 1);
        document.getElementById('nextPage').classList.toggle('disabled', page === totalPages || totalPages === 0);
    }
    
    // Initialize filters on page load
    document.addEventListener('DOMContentLoaded', function() {
        // Add event listeners for search and filters
        document.getElementById('userSearch').addEventListener('input', filterUsers);
        document.getElementById('statusFilter').addEventListener('change', filterUsers);
        document.getElementById('roleFilter').addEventListener('change', filterUsers);
        
        // Add event listeners for pagination
        document.getElementById('prevPage').addEventListener('click', function(e) {
            e.preventDefault();
            if (currentPage > 1) {
                goToPage(currentPage - 1);
            }
        });
        
        document.getElementById('nextPage').addEventListener('click', function(e) {
            e.preventDefault();
            if (currentPage < Math.ceil(filteredRows.length / itemsPerPage)) {
                goToPage(currentPage + 1);
            }
        });
        
        // Initialize pagination
        filterUsers();
    });
</script>

<div class="row">
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-header">
                <h5>System Statistics</h5>
            </div>
            <div class="card-body">
                <p>Total Users: <span class="badge bg-primary"><%= users ? users.length : 0 %></span></p>
                <p>Admin Users: <span class="badge bg-danger"><%= users ? users.filter(u => u.role === 'admin').length : 0 %></span></p>
                <p>Regular Users: <span class="badge bg-success"><%= users ? users.filter(u => u.role === 'user').length : 0 %></span></p>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-header">
                <h5>Quick Actions</h5>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a href="/" class="btn btn-primary">
                        <i class="fas fa-arrow-left me-2"></i> Back to Dashboard
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Custom JavaScript for Admin Panel -->
<script>
    // Initialize all wallet setting buttons to show modals
    document.addEventListener('DOMContentLoaded', function() {
        // For each wallet button, add a click handler to show its modal
        const walletButtons = document.querySelectorAll('[data-bs-toggle="modal"]');
        walletButtons.forEach(button => {
            button.addEventListener('click', function() {
                const targetModal = this.getAttribute('data-bs-target');
                const modalElement = document.querySelector(targetModal);
                const modal = new bootstrap.Modal(modalElement);
                modal.show();
            });
        });
    });
</script>
